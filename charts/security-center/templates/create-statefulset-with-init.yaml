apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tenable-security-center
  {{- if eq .Release.Namespace "default" }}
  {{ fail "Installation to default namespace is not supported.  Please review Tenable installation documentation." }}
  {{- else }}
  namespace: {{ .Release.Namespace  }}
  {{- end}}
  labels:
    app: sc-pod
spec:
  # Do not change. replicas 1 is the only supported value right now
  replicas: 1
  selector:
    matchLabels:
      app: sc-pod
  template:
    metadata:
      labels:
        app: sc-pod
        date: "{{ now | unixEpoch }}"
    spec:
      {{- if .Values.affinity }}
      affinity:
{{ .Values.affinity | toYaml | indent 8}}
      {{- end }}

      securityContext:
        # Change group that owns files to tns
        fsGroup: 250

      # This container is run during pod initialization
      initContainers:
      - name: sc-install-container
        image: "{{ .Values.image.repository }}/{{ .Values.image.installImageName }}:{{ .Values.image.installImageTag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
          - mountPath: "/opt"
            name: sc-app-data
        env:
          # PostgresDB configuration for externally managed database server
          - name: SC_PG_HOST
            valueFrom:
              secretKeyRef:
                name: pg-secrets
                key: pg_host
                optional: true
          - name: SC_PG_PORT
            valueFrom:
              secretKeyRef:
                name: pg-secrets
                key: pg_port
                optional: true
          - name: SC_PG_USER
            valueFrom:
              secretKeyRef:
                name: pg-secrets
                key: pg_user
                optional: true
          - name: SC_PG_PASSWORD
            valueFrom:
              secretKeyRef:
                name: pg-secrets
                key: pg_password
                optional: true
          - name: SC_PG_DATABASE
            valueFrom:
              secretKeyRef:
                name: pg-secrets
                key: pg_database
                optional: true
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name

      # This container runs the Security Center application
      containers:
      - name: sc-runtime-container
        image: "{{ .Values.image.repository }}/{{ .Values.image.runtimeImageName }}:{{ .Values.image.runtimeImageTag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
        ports:
        - containerPort: 443
          name: https
        - containerPort: 8837
          name: sensor-port
        volumeMounts:
          - mountPath: "/opt"
            name: sc-app-data
        livenessProbe:
          exec:
            command:
              - /scbase/healthCheck.sh
          initialDelaySeconds: 30
          periodSeconds: 10
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          # PostgresDB configuration for externally managed database server
          - name: SC_PG_HOST
            valueFrom:
              secretKeyRef:
                name: pg-secrets
                key: pg_host
                optional: true
          - name: SC_PG_PORT
            valueFrom:
              secretKeyRef:
                name: pg-secrets
                key: pg_port
                optional: true
          - name: SC_PG_USER
            valueFrom:
              secretKeyRef:
                name: pg-secrets
                key: pg_user
                optional: true
          - name: SC_PG_PASSWORD
            valueFrom:
              secretKeyRef:
                name: pg-secrets
                key: pg_password
                optional: true
          - name: SC_PG_DATABASE
            valueFrom:
              secretKeyRef:
                name: pg-secrets
                key: pg_database
                optional: true

      volumes:
        - name: sc-app-data
          persistentVolumeClaim:
            claimName: tenable-pvc-sc
